<div class="chat-container">
    <h2>{{ title }}</h2>
    <div id="chat-messages" class="chat-messages"></div>
    <div class="chat-input">
        <input type="text" id="message-input" placeholder="Type your message..." />
        <button onclick="sendMessage()">Send</button>
    </div>
</div>

<script>
    // WebSocket connection
    const ws = new WebSocket(`ws://localhost:3000{{ wsUrl }}`);
    const messagesDiv = document.getElementById('chat-messages');
    const messageInput = document.getElementById('message-input');

    ws.onopen = function() {
        console.log('Connected to WebSocket');
        addSystemMessage('Connected to chat server');
    };

    ws.onmessage = function(event) {
        const data = JSON.parse(event.data);
        console.log('Received:', data);
        
        switch(data.event) {
            case 'connected':
                addSystemMessage(`Connected with ID: ${data.data.clientId}`);
                break;
            case 'user-joined':
                addSystemMessage(data.data.message);
                break;
            case 'new-message':
                addMessage(data.data);
                break;
            default:
                console.log('Unknown event:', data.event);
        }
    };

    ws.onclose = function() {
        addSystemMessage('Disconnected from chat server');
    };

    ws.onerror = function(error) {
        addSystemMessage('Connection error: ' + error);
    };

    function sendMessage() {
        const message = messageInput.value.trim();
        if (message) {
            ws.send(JSON.stringify({
                event: 'chat-message',
                data: { message }
            }));
            messageInput.value = '';
        }
    }

    function addMessage(data) {
        const messageDiv = document.createElement('div');
        messageDiv.className = 'message';
        messageDiv.innerHTML = `
            <div class="message-header">
                <strong>User ${data.sender}</strong>
                <span class="timestamp">${new Date(data.timestamp).toLocaleTimeString()}</span>
            </div>
            <div class="message-content">${data.message}</div>
        `;
        messagesDiv.appendChild(messageDiv);
        messagesDiv.scrollTop = messagesDiv.scrollHeight;
    }

    function addSystemMessage(message) {
        const messageDiv = document.createElement('div');
        messageDiv.className = 'system-message';
        messageDiv.textContent = message;
        messagesDiv.appendChild(messageDiv);
        messagesDiv.scrollTop = messagesDiv.scrollHeight;
    }

    // Send message on Enter key
    messageInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            sendMessage();
        }
    });
</script>

<style>
    .chat-container {
        max-width: 800px;
        margin: 0 auto;
    }
    .chat-messages {
        height: 400px;
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 20px;
        overflow-y: auto;
        background: #f9f9f9;
        margin-bottom: 20px;
    }
    .message {
        margin-bottom: 15px;
        padding: 10px;
        background: white;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    .message-header {
        display: flex;
        justify-content: space-between;
        margin-bottom: 5px;
        font-size: 0.9em;
    }
    .timestamp {
        color: #666;
    }
    .message-content {
        color: #333;
    }
    .system-message {
        text-align: center;
        color: #666;
        font-style: italic;
        margin-bottom: 10px;
        padding: 5px;
        background: #e9e9e9;
        border-radius: 3px;
    }
    .chat-input {
        display: flex;
        gap: 10px;
    }
    .chat-input input {
        flex: 1;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 5px;
        font-size: 16px;
    }
    .chat-input button {
        padding: 10px 20px;
        background: #667eea;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
    }
    .chat-input button:hover {
        background: #5a67d8;
    }
</style>
